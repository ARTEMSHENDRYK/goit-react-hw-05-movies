{"version":3,"file":"static/js/681.67577b2e.chunk.js","mappings":"mXAEMA,EAAS,CACbC,QAAS,mCACTC,SAAU,SAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAEoBC,EAAAA,EAAAA,GAAM,mDAAoD,CAAEC,OAAQL,IAFxF,cAEGM,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAMHC,QAAQC,IAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,iGAEoBR,EAAAA,EAAAA,GAAM,mDAAD,OAAoDQ,EAApD,+BAA8F,CAAEP,OAAQL,IAFjI,cAEGM,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAMHC,QAAQC,IAAR,MANG,gFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,iGAEoBV,EAAAA,EAAAA,GAAM,sCAAD,OAAuCU,EAAvC,KAAmD,CAAET,OAAQL,IAFtF,cAEGM,EAFH,yBAGIA,EAASC,MAHb,gCAMHE,QAAQC,IAAR,MANG,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,iGAEoBV,EAAAA,EAAAA,GAAM,sCAAD,OAAuCU,EAAvC,aAA2D,CAAET,OAAQL,IAF9F,cAEGM,EAFH,yBAGIA,EAASC,KAAKS,MAHlB,gCAMHP,QAAQC,IAAR,MANG,gFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,iGAEoBV,EAAAA,EAAAA,GAAM,sCAAD,OAAuCU,EAAvC,mBAAiE,CAAET,OAAQL,IAFpG,cAEGM,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAMHC,QAAQC,IAAR,MANG,gFAUP,IAAMQ,EAAgB,CACpBf,YAAAA,EACAQ,gBAAAA,EACAE,gBAAAA,EACAE,gBAAAA,EACAE,gBAAAA,GAGF,W,8ECjEQA,EAAoBE,EAAQ,KAA5BF,gBACR,EAAgCE,EAAQ,KAAhCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACVC,EAAcH,EAAQ,IAAtBG,UAoCR,UAlCgB,WACd,MAA8BF,IAA9B,eAAOG,EAAP,KAAgBC,EAAhB,KACQV,EAAYQ,IAAZR,QAYR,OAVAO,GAAU,WACR,IAAMI,EAAY,mCAAG,oGACIR,EAAgBH,GADpB,OACbR,EADa,OAEnBkB,EAAWlB,GAFQ,2CAAH,qDAKlBmB,GACD,GAAC,CAACX,KAID,8BACGS,GAAWA,EAAQG,OAAS,GAE3B,wBACGH,EAAQI,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAFGF,EAIT,OAGN,uBAAG,6CAIV,C","sources":["api/TheMovieDB.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst PARAMS = {\n  api_key: \"e11933f426665230c05914275e20f129\",\n  language: \"en-US\",\n}\n\nexport async function getTrending() {\n  try {\n    const response = await axios(\"https://api.themoviedb.org/3/trending/movie/day?\", { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getSearchMovies(searchQuery) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&page=1`, { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}?`, { params: PARAMS });\n    return response.data;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}/credits?`, { params: PARAMS });\n    return response.data.cast;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}/reviews?page=1`, { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nconst TheMovieDBAPI = {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n}\n\nexport default TheMovieDBAPI;","const { getMovieReviews } = require(\"api/TheMovieDB\");\nconst { useState, useEffect } = require(\"react\");\nconst { useParams } = require(\"react-router-dom\");\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const response = await getMovieReviews(movieId);\n      setReviews(response);\n    }\n\n    fetchReviews();\n  },[movieId])\n\n\n  return (\n    <>\n      {reviews && reviews.length > 0\n        ?\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>AUTHOR: {author}</p>\n                <p>{content}</p>\n              </li>\n            )})}\n        </ul>\n        :\n        <p>We don't have any reviews of this movie</p>\n      }\n    </>\n  )\n}\n\nexport default Reviews;"],"names":["PARAMS","api_key","language","getTrending","axios","params","response","data","results","console","log","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","TheMovieDBAPI","require","useState","useEffect","useParams","reviews","setReviews","fetchReviews","length","map","id","author","content"],"sourceRoot":""}