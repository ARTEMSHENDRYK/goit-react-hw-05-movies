{"version":3,"file":"static/js/135.c7ed0f8a.chunk.js","mappings":"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","sources":["api/TheMovieDB.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst PARAMS = {\n  api_key: \"e11933f426665230c05914275e20f129\",\n  language: \"en-US\",\n}\n\nexport async function getTrending() {\n  try {\n    const response = await axios(\"https://api.themoviedb.org/3/trending/movie/day?\", { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getSearchMovies(searchQuery) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&page=1`, { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}?`, { params: PARAMS });\n    return response.data;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}/credits?`, { params: PARAMS });\n    return response.data.cast;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}/reviews?page=1`, { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nconst TheMovieDBAPI = {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n}\n\nexport default TheMovieDBAPI;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"return\":\"MovieDetails_return__6c-G3\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"movieDescr\":\"MovieDetails_movieDescr__nPSf4\",\"title\":\"MovieDetails_title__cUGs9\",\"text\":\"MovieDetails_text__RHcc4\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"genre\":\"MovieDetails_genre__+tTbx\",\"list\":\"MovieDetails_list__dbNMP\",\"link\":\"MovieDetails_link__U+v+7\",\"item\":\"MovieDetails_item__mbUY+\"};","import { useEffect, useRef, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieDetails } from \"api/TheMovieDB\";\nimport css from \"./MovieDetails.module.css\";\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState();\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const response = await getMovieDetails(movieId);\n      setMovieDetails(response);\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <section className={css.container}>\n      <Link className={css.return} to={backLinkLocationRef.current}>Return</Link>\n      {movieDetails &&\n        <div className={css.movieDetails}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n          <div className={css.movieDescr}>\n            <h2 className={css.title}>{`${movieDetails.title} (${movieDetails.release_date.substring(0, 4)})`}</h2>\n            <p className={css.text}>User score: {Math.round(movieDetails.vote_average * 10)}%</p>\n            <h3 className={css.overview}>Overview:</h3>\n            <p className={css.text}>{movieDetails.overview}</p>\n            <h4 className={css.genres}>Genres</h4>\n            <p className={css.text}>\n              {movieDetails.genres.map(({ id, name }) => {\n                return (\n                  <span className={css.genre} key={id}>{name}</span>\n                )\n              })}\n            </p>\n          </div>\n        </div>}  \n      <h3 className={css.title}>Additional information</h3>\n        <ul className={css.list}>\n          <li className={css.item}>\n            <Link className={css.link} to=\"cast\">Cast</Link>\n          </li>\n          <li className={css.item}>\n            <Link  className={css.link} to=\"reviews\">Reviews</Link>\n          </li>\n          <Outlet />\n        </ul>\n    </section>\n  )  \n}\n\nexport default MovieDetails;\n"],"names":["PARAMS","api_key","language","getTrending","axios","params","response","data","results","console","log","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","movieDetails","setMovieDetails","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","className","css","to","current","src","poster_path","alt","title","release_date","substring","Math","round","vote_average","overview","genres","map","id","name"],"sourceRoot":""}