{"version":3,"file":"static/js/881.75b9382b.chunk.js","mappings":"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","sources":["api/TheMovieDB.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst PARAMS = {\n  api_key: \"e11933f426665230c05914275e20f129\",\n  language: \"en-US\",\n}\n\nexport async function getTrending() {\n  try {\n    const response = await axios(\"https://api.themoviedb.org/3/trending/movie/day?\", { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getSearchMovies(searchQuery) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&page=1`, { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}?`, { params: PARAMS });\n    return response.data;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}/credits?`, { params: PARAMS });\n    return response.data.cast;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${movieId}/reviews?page=1`, { params: PARAMS });\n    return response.data.results;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nconst TheMovieDBAPI = {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n}\n\nexport default TheMovieDBAPI;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"input\":\"Movies_input__KrUqs\",\"submit\":\"Movies_submit__Nxgt8\",\"list\":\"Movies_list__hqYjd\",\"link\":\"Movies_link__MzAfU\",\"item\":\"Movies_item__Ba4aJ\"};","import { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getSearchMovies } from \"api/TheMovieDB\";\nimport css from \"./Movies.module.css\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get(\"query\") ?? \"\";\n  const location = useLocation();\n  const [flag, setFlag] = useState(true);\n\n  const handleInputChange = (evt) => {\n    setFlag(false);\n    evt.target.value.toLowerCase()\n      ? setSearchParams({ query: evt.target.value.toLowerCase() })\n      : setSearchParams({});\n  } \n  \n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (!searchQuery.trim()) {\n      alert(\"Some search query needed.\");\n      return;\n    }\n    \n    setFlag(true);\n  }\n\n  useEffect(() => {\n    if (!flag) return;\n    \n    const fetchSearchMovies = async () => {\n      const response = await getSearchMovies(searchQuery);\n      setMovies(response);\n    }  \n\n    fetchSearchMovies();\n  }, [flag, searchQuery]);\n\n\n  return (\n    <section className={css.container}>\n      <form onSubmit={handleSubmit}>\n        <input className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchQuery}\n          onChange={handleInputChange}\n        />\n        <button className={css.submit} type=\"submit\">\n          <p className={css.text}>Search</p>\n        </button>\n      </form>\n      <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <Link className={css.link}\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}>\n              <li className={css.item}>\n                {title}\n              </li>\n          </Link>\n        )})}\n      </ul>  \n    </section>\n  )  \n}\n\nexport default Movies;"],"names":["PARAMS","api_key","language","getTrending","axios","params","response","data","results","console","log","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","flag","setFlag","useEffect","fetchSearchMovies","className","css","onSubmit","evt","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","query","map","id","title","to","state","from"],"sourceRoot":""}